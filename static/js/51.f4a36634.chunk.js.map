{"version":3,"sources":["views/App/Blank/Blank.js"],"names":["Blank","props","toggleCud","e","cell","uid","nama","nm_lapak","no_kontak","created_at","state","cudmodal","tabel","current","getSelection","target","name","alert","setState","data","title","handleChange","value","handleCud","axios","post","then","res","status","getData","console","log","catch","error","columns","text","dataField","width","source","jqx","dataAdapter","dataFields","type","dataType","id","localData","dataedit","kontak","blank","createRef","bind","get","this","className","col","sm","md","xl","block","color","onClick","isOpen","toggle","toggleAdd","row","htmlFor","xs","defaultValue","onChange","placeholder","ref","selectionMode","columnsResize","pageable","pagerButtonsCount","altRows","sortable","React","PureComponent"],"mappings":"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","file":"static/js/51.f4a36634.chunk.js","sourcesContent":["import React, { createRef } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  Col, Row,\r\n  Button, Input, Label,\r\n  Modal, ModalBody, ModalFooter, ModalHeader,\r\n  FormGroup\r\n} from 'reactstrap';\r\n\r\nimport 'jqwidgets-scripts/jqwidgets/styles/jqx.base.css';\r\nimport JqxDataTable, { IDataTableProps, jqx } from 'jqwidgets-scripts/jqwidgets-react-tsx/jqxdatatable';\r\n\r\nclass Blank extends React.PureComponent<{}, IDataTableProps> {\r\n    constructor(props: {}) {\r\n      super(props);\r\n      const source: any = {\r\n        dataFields: [\r\n          { name: 'nama', type: 'string' },\r\n          { name: 'nm_lapak', type: 'string' },\r\n          { name: 'no_kontak', type: 'string' },\r\n          { name: 'created_at', type: 'string' }\r\n        ],\r\n        dataType: 'json',\r\n        id: 'id',\r\n        localData: ''\r\n      };\r\n      this.state = {\r\n        columns: [\r\n          { text: 'Nama', dataField: 'nama', width: 150 },\r\n          { text: 'Brand', dataField: 'nm_lapak', width: 150 },\r\n          { text: 'Kontak', dataField: 'no_kontak', width: 150 },\r\n          { text: 'created_at', dataField: 'created_at', }\r\n        ],\r\n        source: new jqx.dataAdapter(source),\r\n\r\n        data:{ uid:'', nama : '', nm_lapak : '', no_kontak : '' ,created_at: ''},\r\n        dataedit:{ uid:'', nama : '', nm_lapak : '', kontak : '' },\r\n\r\n        cudmodal: false,\r\n        title: '',\r\n        blank: ''\r\n      };\r\n      this.tabel = createRef();\r\n\r\n      this.toggleCud = this.toggleCud.bind(this);\r\n      this.handleCud = this.handleCud.bind(this);\r\n\r\n      this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    toggleCud=(e)=> {\r\n      // console.log('cell',this.state.data);\r\n      //\r\n      var cell = { uid: \"\", nama : \"\", nm_lapak : \"\", no_kontak : \"\", created_at :\"\" };\r\n      if (!this.state.cudmodal){\r\n        if (this.tabel.current.getSelection()[0]){\r\n          cell = this.tabel.current.getSelection()[0];\r\n        }\r\n      //\r\n        if (e.target.name!=='Tambah' && !cell['uid'] ) return alert('data belum dipilih');\r\n        delete cell['_visible']\r\n      //   // if (e.target.name==='Tambah') cell={ uid: '', nama : '', nm_lapak : '', no_kontak : '' }\r\n\r\n      }\r\n      this.setState({\r\n        data: cell,\r\n        cudmodal: !this.state.cudmodal,\r\n        title: e.target.name\r\n      });\r\n    }\r\n\r\n\r\n    handleChange=(e)=>{\r\n      const data = this.state.data;\r\n      data[e.target.name] = e.target.value\r\n      // console.log(data)\r\n      this.setState({\r\n        data: data\r\n      })\r\n      // console.log(this.state.data)\r\n    }\r\n\r\n    handleCud=(e)=>{\r\n      var data = this.state.data;\r\n      if (e.target.name === \"Tambah\") data[\"oper\"] = 'add';\r\n      if (e.target.name === \"Ubah\") data[\"oper\"] = 'edit';\r\n      if (e.target.name === \"Hapus\") data[\"oper\"] = 'del';\r\n\r\n      axios.post('https://nino-project.000webhostapp.com/public/api/mitra/cud', data)\r\n      .then((res) => {\r\n        if(res.data.status === 'success'){\r\n          this.getData();\r\n          this.setState({\r\n            cudmodal: !this.state.cudmodal,\r\n            data:{ uid:'', nama : '', nm_lapak : '', no_kontak : '' }\r\n          });\r\n        }\r\n\r\n        console.log(res)\r\n      })\r\n      .catch((error) => {\r\n        // handle error\r\n        console.log(error);\r\n      })\r\n      .then(() => {\r\n        // always executed\r\n\r\n      });\r\n    }\r\n\r\n    getData() {\r\n      // axios.get('http://nino.rf.gd/public/api/mitra/alldata')\r\n      // http://localhost/server-api-lumen/public/api/alldata\r\n      axios.get('https://nino-project.000webhostapp.com/public/api/mitra/alldata')\r\n        .then((res) => {\r\n          var source = {\r\n            dataFields: [\r\n              { name: 'nama' },\r\n              { name: 'nm_lapak' },\r\n              { name: 'no_kontak' },\r\n              { name: 'created_at' }\r\n            ],\r\n            dataType: 'json',\r\n            id: 'id',\r\n            localData: res.data\r\n          };\r\n          this.setState({\r\n            source: new jqx.dataAdapter(source)\r\n          });\r\n          console.log('in',res.data)\r\n        })\r\n        .catch((error) => {\r\n          // handle error\r\n          console.log(error);\r\n        })\r\n        .then(() => {\r\n          // always executed\r\n\r\n        });\r\n    }\r\n\r\n    componentDidMount(){\r\n      this.getData()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n          <div className=\"animated fadeIn\">\r\n            <Row className=\"align-items-center\">\r\n              <Col col=\"6\" sm=\"4\" md=\"2\" xl className=\"mb-3 mb-xl-0\">\r\n                <Button block color=\"success\" onClick={this.toggleCud} name=\"Tambah\">Tambah</Button>\r\n              </Col>\r\n              <Col col=\"6\" sm=\"4\" md=\"2\" xl className=\"mb-3 mb-xl-0\">\r\n                <Button block color=\"primary\" onClick={this.toggleCud} name=\"Ubah\">Ubah</Button>\r\n              </Col>\r\n              <Col col=\"6\" sm=\"4\" md=\"2\" xl className=\"mb-3 mb-xl-0\">\r\n                <Button block color=\"danger\" onClick={this.toggleCud} name=\"Hapus\">Hapus</Button>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Modal isOpen={this.state.cudmodal} toggle={this.toggleCud}\r\n                   className={'modal-lg ' + this.props.className}>\r\n              <ModalHeader toggle={this.toggleAdd}>{this.state.title} Data</ModalHeader>\r\n              <ModalBody>\r\n                {this.state.title !== \"Hapus\" ? (\r\n                  <div>\r\n                    <FormGroup row>\r\n                      <Col md=\"3\">\r\n                        <Label htmlFor=\"nama\">Nama</Label>\r\n                      </Col>\r\n                      <Col xs=\"12\" md=\"9\">\r\n                        <Input type=\"text\" id=\"nama\" name=\"nama\" defaultValue={this.state.data['nama']} onChange={this.handleChange} placeholder=\"Nama Owner\" />\r\n                      </Col>\r\n                    </FormGroup>\r\n                    <FormGroup row>\r\n                      <Col md=\"3\">\r\n                        <Label htmlFor=\"brand\">Brand</Label>\r\n                      </Col>\r\n                      <Col xs=\"12\" md=\"9\">\r\n                        <Input type=\"text\" id=\"nm_lapak\" name=\"nm_lapak\" defaultValue={this.state.data['nm_lapak']} onChange={this.handleChange} placeholder=\"Nama Brand\" />\r\n                      </Col>\r\n                    </FormGroup>\r\n                    <FormGroup row>\r\n                      <Col md=\"3\">\r\n                        <Label htmlFor=\"kontak\">Kontak</Label>\r\n                      </Col>\r\n                      <Col xs=\"12\" md=\"9\">\r\n                        <Input type=\"text\" id=\"kontak\" name=\"no_kontak\" defaultValue={this.state.data['no_kontak']} onChange={this.handleChange} placeholder=\"Nomor Kontak\" />\r\n                      </Col>\r\n                    </FormGroup>\r\n                  </div>\r\n                ):(\r\n                  <div>Anda akan menghapus data {this.state.data['nama']} ({this.state.data['nm_lapak']})</div>\r\n                )}\r\n\r\n              </ModalBody>\r\n              <ModalFooter>\r\n                <Button color=\"primary\" onClick={this.handleCud} name={this.state.title}>{this.state.title}</Button>\r\n                <Button color=\"secondary\" onClick={this.toggleCud}>Batal</Button>\r\n              </ModalFooter>\r\n            </Modal>\r\n            <JqxDataTable\r\n                // @ts-ignore\r\n                ref={this.tabel}\r\n                columns={this.state.columns} source={this.state.source}\r\n                width={'100%'} selectionMode={'singleRow'} columnsResize={true} pageable={true} pagerButtonsCount={10}\r\n                altRows={true} sortable={true} />\r\n          </div>\r\n        );\r\n    }\r\n}\r\nexport default Blank;\r\n"],"sourceRoot":""}